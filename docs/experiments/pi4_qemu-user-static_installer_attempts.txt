#Farthest I've gotten with qemu-user-static so far:

#pinebook guide (https://forum.pine64.org/showthread.php?tid=8979), then:

winecfg

sudo reboot

    ## Compile and build qemu-user-static (qemu-i386-static)
    #cd ~/Downloads
    #git clone https://git.qemu.org/git/qemu.git
    #cd qemu
    #git checkout 79d6f2baa4b738bb223a0ad382661fe501b0c867
    #./configure --prefix=$(cd ..; pwd)/qemu-user-static --static --disable-system --enable-linux-user --target-list=i386-linux-user --disable-tools # Pinebook guide
    #ninja -C build
    #sudo ninja install -C build
    #cd ../qemu-user-static/bin
    #for i in *; do sudo mv $i $i-static; done
sudo rm /usr/bin/qemu-i386-static
sudo cp ~/Downloads/qemu-user-static_26f6b15/qemu-i386-static /usr/bin/ # This was compiled from Dec 2020 qemu-user-static commit 26f6b15e2636eb20cb6757093170341b22fe6fbc
# Building qemu-i386-static from that commit avoids qemu-i386-static: ../accel/tcg/translate-all.c:2724: page_set_flags: Assertion `start < end' failed.
#Illegal instruction
sudo cp ~/Downloads/qemu-user-static_26f6b15/qemu-i386-static ~/chroot-stretch-i386/usr/bin/

# 79d6f2baa4b738bb223a0ad382661fe501b0c867 has less "Illegal instruction" errors, but still crashes dotnet35sp1

sudo systemctl restart systemd-binfmt

magic='\x7f\x45\x4c\x46\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x03\x00'
mask='\xff\xff\xff\xff\xff\xfe\xfe\xfc\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff'
#magic='\x7fELF\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x03\x00'
#mask='\xff\xff\xff\xff\xff\xfe\xfe\x00\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff'
#These commented vars don't work either
fmt=i386
sudo /usr/sbin/./update-binfmts --package qemu-user-static --remove qemu-$fmt /usr/bin/qemu-$fmt-static
sudo /usr/sbin/./update-binfmts --package qemu-user-static --install qemu-$fmt /usr/bin/qemu-$fmt-static \
        --magic "$magic" --mask "$mask" --offset 0 --credential yes --fix-binary yes

sudo chroot ~/chroot-stretch-i386/ /bin/su -l root
apt install -y sudo 
echo "pi ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
exit

sudo chroot ~/chroot-stretch-i386/ /bin/su -l pi

DISPLAY=:0 winecfg # runs!
sudo rm -rf .wine

    wget https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks # Install winetricks
    chmod +x winetricks 
    sudo mv winetricks /usr/local/bin
    sudo apt install -y cabextract # winetricks needs cabextract

#edit winetricks like this https://github.com/novaspirit/winetricks/commit/3fd18ad6497de5a2deb4f2ba7279ab5f1e9018b1

DISPLAY=:0 winetricks -q dotnet35sp1
#Dead end here: "wine client error:28: qemu: uncaught target signal 11 (Segmentation fault) - core dumped"













Older install attempts
######################################
1. Instructions via https://www.novaspirit.com/2019/04/15/run-x86-arm/
 - For RPi4, skip steps 1-3 (RPi4 already has the proper kernel for Wine)
2. Compile a fresh qemu (repo versions may be old/broken): https://github.com/Itai-Nelken/qemu2deb 
 - Ask Ita for help with qemu-user & qemu-user-static
######################################

#Novaspirit guide distilled (testing on RPi4 - currently broken)
 
sudo apt-get install -y qemu qemu-user qemu-user-static binfmt-support debootstrap binutils debian-keyring debian-archive-keyring

# Now delete all /usr/bin/qemu*-static files
# Now copy all newly compiled qemu-user and qemu-user-static files to /usr/bin/

cd ~
sudo debootstrap --foreign --arch i386 stretch ./chroot-stretch-i386 http://ftp.us.debian.org/debian
sudo mount -t sysfs sys ./chroot-stretch-i386/sys/
sudo mount -t proc proc ./chroot-stretch-i386/proc/
sudo mount --bind /dev ./chroot-stretch-i386/dev/
sudo mount --bind /dev/pts ./chroot-stretch-i386/dev/pts/
sudo mount --bind /dev/shm ./chroot-stretch-i386/dev/shm/
	
sudo cp /usr/bin/qemu-i386-static ./chroot-stretch-i386/usr/bin/

sudo chroot ./chroot-stretch-i386/ /debootstrap/debootstrap --second-stage # unpack host system. takes about 15 minutes

sudo chroot /home/pi/chroot-stretch-i386/ /bin/su -l root # Set up root account
    arch # should say i686
    echo "export LANGUAGE='C'" >> ~/.bashrc #Add lines to bashrc, then initialize them too four our shell instance
    echo "export LC_ALL='C'" >> ~/.bashrc
    echo "export DISPLAY=:0" >> ~/.bashrc
    export LANGUAGE='C'
    export LC_ALL='C'
    export DISPLAY=:0
    apt update
    
    apt install -y leafpad # install any x86 gui application so that requirements to run gui will also be installed. Takes about 5 min
    apt install -y bzip2 # for extracting POL files in case we need that
    apt install -y ca-certificates # Teach wget to trust websites
    
    apt install -y sudo # Give the pi (user) chroot account sudo access
    echo "pi ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
    
    #apt install winbind # don't think we need this even though wine complains about it
    #apt install --reinstall libgnutls30 # not sure what to do about this yet (also not sure if libgnutls wine errors are just old wine bugs from POL version)
    
    apt install -y expect # Install expect so that we can automate the user account installation
    chmod 666 /dev/ptmx
    chmod 755 /dev/pts
    mount -t devpts -o gid=5,mode=620 none /dev/pts
    
cat >~/setupusr.sh <<EOF
#!/usr/bin/expect -f
set force_conservative 0
set timeout -1
spawn adduser -uid 1000 pi # I think the uid number should be the same number as your non-chroot pi uid
match_max 100000
expect "Enter new UNIX password: "
send -- "raspberry\r"
expect "Retype new UNIX password: "
send -- "raspberry\r"
expect -exact "Full Name \[\]: "
send -- "\r"
expect -exact "Room Number \[\]: "
send -- "\r"
expect -exact "Work Phone \[\]: "
send -- "\r"
expect -exact "Home Phone \[\]: "
send -- "\r"
expect -exact "Other \[\]: "
send -- "\r"
expect -exact "Is the information correct? \[Y/n\] "
send -- "Y\r"
expect eof
EOF
chmod +x ~/setupusr.sh
./setupusr.sh
rm setupusr.sh
exit

sudo chroot /home/pi/chroot-stretch-i386/ /bin/su -l pi # Set up user account
    arch # should say i686
    echo "export LANGUAGE='C'" >> ~/.bashrc #Add lines to bashrc, then initialize them too four our shell instance
    echo "export LC_ALL='C'" >> ~/.bashrc
    echo "export DISPLAY=:0" >> ~/.bashrc
    export LANGUAGE='C'
    export LC_ALL='C'
    export DISPLAY=:0
exit

sudo chroot /home/pi/chroot-stretch-i386/ /bin/su -l root # Log in as root to install wine
            # Old PlayOnLinux wine install method (Novaspirit guide)
            wget https://www.playonlinux.com/wine/binaries/linux-x86/PlayOnLinux-wine-3.9-linux-x86.pol
            tar -jxvf PlayOnLinux-wine-3.9-linux-x86.pol --strip-components=1
            mv ./3.9/bin/wine-preloader ./3.9/bin/wine-preloader.renamed # we need to rename a file for wine to run correctly
            mv ./3.9 /opt/wine-3.9/
            echo PATH=/opt/wine-3.9/bin/:$PATH >> ~/.bashrc
            PATH=/opt/wine-3.9/bin/:$PATH
exit

sudo reboot # fixed the bus error
#sudo systemctl restart systemd-binfmt # maybe just need to restart binfmt?

sudo chroot /home/pi/chroot-stretch-i386/ /bin/su -l pi # Only the user account can run wine (root account can't use exported display / “export DISPLAY=:0”)
    arch # should say i686
    mkdir ~/Downloads
    #cd ~/Downloads/
    #wget https://dl.winehq.org/wine-builds/debian/dists/buster/main/binary-i386/wine-devel-i386_5.21~buster_i386.deb # NOTE: Replace this link with the version you want
    #wget https://dl.winehq.org/wine-builds/debian/dists/buster/main/binary-i386/wine-devel_5.21~buster_i386.deb  # NOTE: Also replace this link with the version you want
    #dpkg-deb -xv wine-devel-i386_5.21~buster_i386.deb wine-installer # NOTE: Make sure these dpkg command matches the filename of the deb package you just downloaded
    #dpkg-deb -xv wine-devel_5.21~buster_i386.deb wine-installer
    #mv ~/Downloads/wine-installer/opt/wine* ~/wine
    #mv ~/wine/bin/wine-preloader ~/wine/bin/wine-preloader.renamed # !!SEE IF RENAMING THIS HELPS MEMORY ALLOCATION ERRORS WITH QEMU - Also check exagear wine sources to see if they direct wine-preloader to allocate memory somewhere else
    #rm wine*.deb # clean up
    #rm -rf wine-installer # clean up
        
    #echo -e '#!/bin/bash\nsetarch linux32 -L '"$HOME/wine/bin/wine "'"$@"' | sudo tee -a /usr/local/bin/wine >/dev/null # Script to launch wine programs as 32bit only
    ##sudo ln -s ~/wine/bin/wine /usr/local/bin/wine # We could also just make a symlink, but our qemu i386 environment only works for 32bit apps
    #sudo ln -s ~/wine/bin/wineboot /usr/local/bin/wineboot
    #sudo ln -s ~/wine/bin/winecfg /usr/local/bin/winecfg
    #sudo ln -s ~/wine/bin/wineserver /usr/local/bin/wineserver
    #sudo chmod +x /usr/local/bin/wine /usr/local/bin/wineboot /usr/local/bin/winecfg /usr/local/bin/wineserver
	
    wget https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks # Install winetricks
    chmod +x winetricks 
    sudo mv winetricks /usr/local/bin
    sudo apt install -y cabextract # winetricks needs cabextract
    # If getting this error: "w_die wine cmd.exe /c echo '%ProgramFiles%' returned unexpanded string '%SystemDrive%\Program Files'" then try modifying winetricks like this https://github.com/novaspirit/winetricks/commit/3fd18ad6497de5a2deb4f2ba7279ab5f1e9018b1
    
	    # Official winehq installer (needs custom qemu?)
            #wget -O - https://dl.winehq.org/wine-builds/winehq.key | sudo apt-key add - 
            #echo 'deb https://dl.winehq.org/wine-builds/debian/ stretch main' | sudo tee -a /etc/apt/sources.list
            #sudo apt install -y apt-transport-https
            #sudo apt-get update
            #sudo apt-get install --install-recommends winehq-stable=5.0.2~stretch -y # This takes 800MB and about 20 minutes on a Pi 4B.
	    #!!TRY RENAMING wine-preloader TO SEE IF THIS GETS RID OF MEMORY ALLOCATION COLLISIONS WITH QEMU
            #wineboot # memory allocation errors https://forum.winehq.org/viewtopic.php?f=8&t=34849&p=133017#p133017

		    # Old PlayOnLinux wine install method (Novaspirit guide - libgnutls errors??)
		    echo PATH=/opt/wine-3.9/bin/:$PATH >> ~/.bashrc
		    PATH=/opt/wine-3.9/bin/:$PATH

    winecfg # "Bus error" may happen here (with qemu-user / qemu-user-static v1:3.1+dfsg-8+deb10u8 armhf & qemu-user / qemu-user-static v1:6.0.50 armhf). Try rebooting.
exit



#### Uninstaller - Work in progress (doesn't really work yet...)
    sudo apt remove qemu qemu-user qemu-user-static
    sudo reboot
    sudo umount -t sysfs sys ./chroot-stretch-i386/sys/
    sudo umount -t proc proc ./chroot-stretch-i386/proc/
    sudo umount /dev ./chroot-stretch-i386/dev/
    sudo umount /dev/pts ./chroot-stretch-i386/dev/pts/
    sudo umount /dev/shm ./chroot-stretch-i386/dev/shm/
    sudo rm -rf ~/chroot-stretch-i386





#####################################################################################################

#Novaspirit guide distilled (testing on RPi4 - currently broken) variant B
 
sudo apt-get install -y qemu qemu-user qemu-user-static binfmt-support debootstrap binutils debian-keyring debian-archive-keyring

# Now delete all /usr/bin/qemu*-static files
# Now copy all newly compiled qemu-user and qemu-user-static files to /usr/bin/

	cd ~
	sudo debootstrap --foreign --arch amd64 stretch ./chroot-stretch-amd64 http://ftp.us.debian.org/debian
	sudo mount -t sysfs sys ./chroot-stretch-amd64/sys/
	sudo mount -t proc proc ./chroot-stretch-amd64/proc/
	sudo mount --bind /dev ./chroot-stretch-amd64/dev/
	sudo mount --bind /dev/pts ./chroot-stretch-amd64/dev/pts/
	sudo mount --bind /dev/shm ./chroot-stretch-amd64/dev/shm/
	
sudo cp /usr/bin/qemu-x86_64-static ./chroot-stretch-amd64/usr/bin/

sudo chroot ./chroot-stretch-amd64/ /debootstrap/debootstrap --second-stage # unpack host system. takes about 15 minutes

sudo chroot /home/pi/chroot-stretch-amd64/ /bin/su -l root # set up root account
arch # should say x86_64
echo "export LANGUAGE='C'" >> ~/.bashrc #Add lines to bashrc, then initialize them too four our shell instance
echo "export LC_ALL='C'" >> ~/.bashrc
echo "export DISPLAY=:0" >> ~/.bashrc
export LANGUAGE='C'
export LC_ALL='C'
export DISPLAY=:0
apt update
adduser -uid 1000 pi # 1000 should be the same uid number we find if we type in `id` in a non-chroot environment for our pi user.
## follow prompts to enter dumb info
#expect "Enter new UNIX password:"
#send "raspberry\r"
#expect "Retype new UNIX password:"
#send "raspberry\r"
#expect "Full Name []:"
#send "\r"
#expect "Room Number []:"
#send "\r"
#expect "Work Phone []:"
#send "\r"
#expect "Home Phone []:"
#send "\r"
#expect "Other []:"
#send "\r"
#expect "Is the information correct? [Y/n]"
#send "Y\r"
#expect eof
apt install -y leafpad # install any x86 gui application so that requirements to run gui will also be installed. Takes about 5 min
apt --fix-broken install
exit

sudo chroot /home/pi/chroot-stretch-amd64/ /bin/su -l pi # set up user account
arch # should say x86_64
echo "export LANGUAGE='C'" >> ~/.bashrc #Add lines to bashrc, then initialize them too four our shell instance
echo "export LC_ALL='C'" >> ~/.bashrc
echo "export DISPLAY=:0" >> ~/.bashrc
export LANGUAGE='C'
export LC_ALL='C'
export DISPLAY=:0
exit

# Install wine as root
sudo chroot /home/pi/chroot-stretch-amd64/ /bin/su -l root
apt install -y bzip2
wget --no-check-certificate https://www.playonlinux.com/wine/binaries/linux-x86/PlayOnLinux-wine-3.9-linux-x86.pol
tar -jxvf PlayOnLinux-wine-3.9-linux-x86.pol --strip-components=1
mv ./3.9/bin/wine-preloader ./3.9/bin/wine-preloader.renamed # we need to rename a file for wine to run correctly
mv ./3.9 /opt/wine-3.9/
echo PATH=/opt/wine-3.9/bin/:$PATH >> ~/.bashrc
PATH=/opt/wine-3.9/bin/:$PATH
exit

#since root is not able to use the exported display (“export DISPLAY=:0”) we will need to login to the user account to test wine
sudo chroot /home/pi/chroot-stretch-amd64/ /bin/su -l pi
echo PATH=/opt/wine-3.9/bin/:$PATH >> ~/.bashrc
PATH=/opt/wine-3.9/bin/:$PATH
winecfg
# "/lib/ld-linux.so.2: No such file or directory" - Happens with (qemu-user & qemu-user-static v1:6.0.50 armhf)

#######################################################################
#1. Try copying i386 linux libs https://superuser.com/questions/396044/qemu-i386-on-arm-processor-giving-ld-linux-so-2-error
#2. Try rebooting https://www.raspberrypi.org/forums/viewtopic.php?f=41&t=226376&sid=d28e33dacb61b345a8ce6691122c121a&start=75
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
################
# Scouting out file contents of necessary deb files to see what files I need if I build my own qemu-user packages (and binfmt?)

#File list of package qemu (1:5.2+dfsg-10) in sid of architecture armhf
#https://packages.debian.org/sid/armhf/qemu/filelist

fast processor emulator, dummy package
QEMU is a fast processor emulator. Once upon a time there was only one package named `qemu', with all functionality included. These days, qemu become large and has been split into numerous packages. Different packages provides entirely different services, and it is very unlikely one will need all of them together. So current `qemu' package makes no sense anymore, and is becoming a dummy package.

If you want full system emulation of some architecture, install one or more of qemu-system-ARCH packages. If you want user-mode emulation, install qemu-user or qemu-user-static package. If you need utilities, use qemu-utils package.

/usr/share/doc/qemu/TODO.Debian
/usr/share/doc/qemu/changelog.Debian.gz
/usr/share/doc/qemu/copyright


#File list of package qemu-user (1:5.2+dfsg-10) in sid of architecture armhf
#https://packages.debian.org/sid/armhf/qemu-user/filelist
/usr/bin/qemu-aarch64
/usr/bin/qemu-aarch64_be
/usr/bin/qemu-alpha
/usr/bin/qemu-arm
/usr/bin/qemu-armeb
/usr/bin/qemu-cris
/usr/bin/qemu-hppa
/usr/bin/qemu-i386
/usr/bin/qemu-m68k
/usr/bin/qemu-microblaze
/usr/bin/qemu-microblazeel
/usr/bin/qemu-mips
/usr/bin/qemu-mips64
/usr/bin/qemu-mips64el
/usr/bin/qemu-mipsel
/usr/bin/qemu-mipsn32
/usr/bin/qemu-mipsn32el
/usr/bin/qemu-nios2
/usr/bin/qemu-or1k
/usr/bin/qemu-ppc
/usr/bin/qemu-ppc64
/usr/bin/qemu-ppc64le
/usr/bin/qemu-riscv32
/usr/bin/qemu-riscv64
/usr/bin/qemu-s390x
/usr/bin/qemu-sh4
/usr/bin/qemu-sh4eb
/usr/bin/qemu-sparc
/usr/bin/qemu-sparc32plus
/usr/bin/qemu-sparc64
/usr/bin/qemu-x86_64
/usr/bin/qemu-xtensa
/usr/bin/qemu-xtensaeb


#File list of package qemu-user-static (1:5.2+dfsg-10) in sid of architecture armhf
#https://packages.debian.org/sid/armhf/qemu-user-static/filelist
/usr/bin/qemu-aarch64-static
/usr/bin/qemu-aarch64_be-static
/usr/bin/qemu-alpha-static
/usr/bin/qemu-arm-static
/usr/bin/qemu-armeb-static
/usr/bin/qemu-cris-static
/usr/bin/qemu-hppa-static
/usr/bin/qemu-i386-static
/usr/bin/qemu-m68k-static
/usr/bin/qemu-microblaze-static
/usr/bin/qemu-microblazeel-static
/usr/bin/qemu-mips-static
/usr/bin/qemu-mips64-static
/usr/bin/qemu-mips64el-static
/usr/bin/qemu-mipsel-static
/usr/bin/qemu-mipsn32-static
/usr/bin/qemu-mipsn32el-static
/usr/bin/qemu-nios2-static
/usr/bin/qemu-or1k-static
/usr/bin/qemu-ppc-static
/usr/bin/qemu-ppc64-static
/usr/bin/qemu-ppc64le-static
/usr/bin/qemu-riscv32-static
/usr/bin/qemu-riscv64-static
/usr/bin/qemu-s390x-static
/usr/bin/qemu-sh4-static
/usr/bin/qemu-sh4eb-static
/usr/bin/qemu-sparc-static
/usr/bin/qemu-sparc32plus-static
/usr/bin/qemu-sparc64-static
/usr/bin/qemu-x86_64-static
/usr/bin/qemu-xtensa-static
/usr/bin/qemu-xtensaeb-static
/usr/libexec/qemu-binfmt/alpha-binfmt-P
/usr/libexec/qemu-binfmt/armeb-binfmt-P
/usr/libexec/qemu-binfmt/cris-binfmt-P
/usr/libexec/qemu-binfmt/hppa-binfmt-P
/usr/libexec/qemu-binfmt/i386-binfmt-P
/usr/libexec/qemu-binfmt/m68k-binfmt-P
/usr/libexec/qemu-binfmt/microblaze-binfmt-P
/usr/libexec/qemu-binfmt/mips-binfmt-P
/usr/libexec/qemu-binfmt/mips64-binfmt-P
/usr/libexec/qemu-binfmt/mips64el-binfmt-P
/usr/libexec/qemu-binfmt/mipsel-binfmt-P
/usr/libexec/qemu-binfmt/mipsn32-binfmt-P
/usr/libexec/qemu-binfmt/mipsn32el-binfmt-P
/usr/libexec/qemu-binfmt/ppc-binfmt-P
/usr/libexec/qemu-binfmt/ppc64-binfmt-P
/usr/libexec/qemu-binfmt/ppc64le-binfmt-P
/usr/libexec/qemu-binfmt/riscv32-binfmt-P
/usr/libexec/qemu-binfmt/riscv64-binfmt-P
/usr/libexec/qemu-binfmt/s390x-binfmt-P
/usr/libexec/qemu-binfmt/sh4-binfmt-P
/usr/libexec/qemu-binfmt/sh4eb-binfmt-P
/usr/libexec/qemu-binfmt/sparc-binfmt-P
/usr/libexec/qemu-binfmt/sparc32plus-binfmt-P
/usr/libexec/qemu-binfmt/sparc64-binfmt-P
/usr/libexec/qemu-binfmt/x86_64-binfmt-P
/usr/libexec/qemu-binfmt/xtensa-binfmt-P
/usr/libexec/qemu-binfmt/xtensaeb-binfmt-P
/usr/sbin/qemu-debootstrap
/usr/share/binfmts/qemu-alpha
/usr/share/binfmts/qemu-armeb
/usr/share/binfmts/qemu-cris
/usr/share/binfmts/qemu-hppa
/usr/share/binfmts/qemu-i386
/usr/share/binfmts/qemu-m68k
/usr/share/binfmts/qemu-microblaze
/usr/share/binfmts/qemu-mips
/usr/share/binfmts/qemu-mips64
/usr/share/binfmts/qemu-mips64el
/usr/share/binfmts/qemu-mipsel
/usr/share/binfmts/qemu-mipsn32
/usr/share/binfmts/qemu-mipsn32el
/usr/share/binfmts/qemu-ppc
/usr/share/binfmts/qemu-ppc64
/usr/share/binfmts/qemu-ppc64le
/usr/share/binfmts/qemu-riscv32
/usr/share/binfmts/qemu-riscv64
/usr/share/binfmts/qemu-s390x
/usr/share/binfmts/qemu-sh4
/usr/share/binfmts/qemu-sh4eb
/usr/share/binfmts/qemu-sparc
/usr/share/binfmts/qemu-sparc32plus
/usr/share/binfmts/qemu-sparc64
/usr/share/binfmts/qemu-x86_64
/usr/share/binfmts/qemu-xtensa
/usr/share/binfmts/qemu-xtensaeb
/usr/share/lintian/overrides/qemu-user-static

#Note: The buster repo version of qemu-user-static doesn't included a /usr/share/binfmts/ directory
#https://packages.debian.org/buster/armhf/qemu-user-static/filelist

#File list of package qemu-user-binfmt (1:5.2+dfsg-10) in sid of architecture armhf
#https://packages.debian.org/sid/armhf/qemu-user-binfmt/filelist
/usr/libexec/qemu-binfmt/alpha-binfmt-P
/usr/libexec/qemu-binfmt/armeb-binfmt-P
/usr/libexec/qemu-binfmt/cris-binfmt-P
/usr/libexec/qemu-binfmt/hppa-binfmt-P
/usr/libexec/qemu-binfmt/i386-binfmt-P
/usr/libexec/qemu-binfmt/m68k-binfmt-P
/usr/libexec/qemu-binfmt/microblaze-binfmt-P
/usr/libexec/qemu-binfmt/mips-binfmt-P
/usr/libexec/qemu-binfmt/mips64-binfmt-P
/usr/libexec/qemu-binfmt/mips64el-binfmt-P
/usr/libexec/qemu-binfmt/mipsel-binfmt-P
/usr/libexec/qemu-binfmt/mipsn32-binfmt-P
/usr/libexec/qemu-binfmt/mipsn32el-binfmt-P
/usr/libexec/qemu-binfmt/ppc-binfmt-P
/usr/libexec/qemu-binfmt/ppc64-binfmt-P
/usr/libexec/qemu-binfmt/ppc64le-binfmt-P
/usr/libexec/qemu-binfmt/riscv32-binfmt-P
/usr/libexec/qemu-binfmt/riscv64-binfmt-P
/usr/libexec/qemu-binfmt/s390x-binfmt-P
/usr/libexec/qemu-binfmt/sh4-binfmt-P
/usr/libexec/qemu-binfmt/sh4eb-binfmt-P
/usr/libexec/qemu-binfmt/sparc-binfmt-P
/usr/libexec/qemu-binfmt/sparc32plus-binfmt-P
/usr/libexec/qemu-binfmt/sparc64-binfmt-P
/usr/libexec/qemu-binfmt/x86_64-binfmt-P
/usr/libexec/qemu-binfmt/xtensa-binfmt-P
/usr/libexec/qemu-binfmt/xtensaeb-binfmt-P
/usr/share/binfmts/qemu-alpha
/usr/share/binfmts/qemu-armeb
/usr/share/binfmts/qemu-cris
/usr/share/binfmts/qemu-hppa
/usr/share/binfmts/qemu-i386
/usr/share/binfmts/qemu-m68k
/usr/share/binfmts/qemu-microblaze
/usr/share/binfmts/qemu-mips
/usr/share/binfmts/qemu-mips64
/usr/share/binfmts/qemu-mips64el
/usr/share/binfmts/qemu-mipsel
/usr/share/binfmts/qemu-mipsn32
/usr/share/binfmts/qemu-mipsn32el
/usr/share/binfmts/qemu-ppc
/usr/share/binfmts/qemu-ppc64
/usr/share/binfmts/qemu-ppc64le
/usr/share/binfmts/qemu-riscv32
/usr/share/binfmts/qemu-riscv64
/usr/share/binfmts/qemu-s390x
/usr/share/binfmts/qemu-sh4
/usr/share/binfmts/qemu-sh4eb
/usr/share/binfmts/qemu-sparc
/usr/share/binfmts/qemu-sparc32plus
/usr/share/binfmts/qemu-sparc64
/usr/share/binfmts/qemu-x86_64
/usr/share/binfmts/qemu-xtensa
/usr/share/binfmts/qemu-xtensaeb

#File list of package binfmt-support (2.2.1-1) in sid of architecture armhf
#https://packages.debian.org/sid/armhf/binfmt-support/filelist
/etc/init.d/binfmt-support
/lib/systemd/system/binfmt-support.service
/usr/lib/binfmt-support/run-detectors
/usr/sbin/update-binfmts
